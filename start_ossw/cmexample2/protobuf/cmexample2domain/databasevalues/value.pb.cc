// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample2domain/databasevalues/value.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobuf/cmexample2domain/databasevalues/value.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cmexample2domain {
namespace databasevalues {

namespace {

const ::google::protobuf::Descriptor* Value_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Value_reflection_ = NULL;
struct ValueOneofInstance {
  const ::cmexample2domain::databasevalues::Infrastructure* infrastructure_;
  const ::cmexample2domain::databasevalues::Citizen* citizen_;
}* Value_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto() {
  protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobuf/cmexample2domain/databasevalues/value.proto");
  GOOGLE_CHECK(file != NULL);
  Value_descriptor_ = file->message_type(0);
  static const int Value_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, infrastructure_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Value_default_oneof_instance_, citizen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, value_),
  };
  Value_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Value_descriptor_,
      Value::default_instance_,
      Value_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _unknown_fields_),
      -1,
      Value_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Value));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Value_descriptor_, &Value::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto() {
  delete Value::default_instance_;
  delete Value_default_oneof_instance_;
  delete Value_reflection_;
}

void protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cmexample2domain::databasevalues::protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2finfrastructure_2eproto();
  ::cmexample2domain::databasevalues::protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fcitizen_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n4protobuf/cmexample2domain/databasevalu"
    "es/value.proto\022\037cmexample2domain.databas"
    "evalues\032=protobuf/cmexample2domain/datab"
    "asevalues/infrastructure.proto\0326protobuf"
    "/cmexample2domain/databasevalues/citizen"
    ".proto\"\230\001\n\005Value\022I\n\016infrastructure\030\001 \001(\013"
    "2/.cmexample2domain.databasevalues.Infra"
    "structureH\000\022;\n\007citizen\030\002 \001(\0132(.cmexample"
    "2domain.databasevalues.CitizenH\000B\007\n\005valu"
    "e", 361);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/cmexample2domain/databasevalues/value.proto", &protobuf_RegisterTypes);
  Value::default_instance_ = new Value();
  Value_default_oneof_instance_ = new ValueOneofInstance;
  Value::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto {
  StaticDescriptorInitializer_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto() {
    protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto();
  }
} static_descriptor_initializer_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Value::kInfrastructureFieldNumber;
const int Value::kCitizenFieldNumber;
#endif  // !_MSC_VER

Value::Value()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cmexample2domain.databasevalues.Value)
}

void Value::InitAsDefaultInstance() {
  Value_default_oneof_instance_->infrastructure_ = const_cast< ::cmexample2domain::databasevalues::Infrastructure*>(&::cmexample2domain::databasevalues::Infrastructure::default_instance());
  Value_default_oneof_instance_->citizen_ = const_cast< ::cmexample2domain::databasevalues::Citizen*>(&::cmexample2domain::databasevalues::Citizen::default_instance());
}

Value::Value(const Value& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cmexample2domain.databasevalues.Value)
}

void Value::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_value();
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:cmexample2domain.databasevalues.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
  if (this != default_instance_) {
  }
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Value_descriptor_;
}

const Value& Value::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobuf_2fcmexample2domain_2fdatabasevalues_2fvalue_2eproto();
  return *default_instance_;
}

Value* Value::default_instance_ = NULL;

Value* Value::New() const {
  return new Value;
}

void Value::clear_value() {
  switch(value_case()) {
    case kInfrastructure: {
      delete value_.infrastructure_;
      break;
    }
    case kCitizen: {
      delete value_.citizen_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Value::Clear() {
  clear_value();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cmexample2domain.databasevalues.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cmexample2domain.databasevalues.Infrastructure infrastructure = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_infrastructure()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_citizen;
        break;
      }

      // optional .cmexample2domain.databasevalues.Citizen citizen = 2;
      case 2: {
        if (tag == 18) {
         parse_citizen:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_citizen()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cmexample2domain.databasevalues.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cmexample2domain.databasevalues.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cmexample2domain.databasevalues.Value)
  // optional .cmexample2domain.databasevalues.Infrastructure infrastructure = 1;
  if (has_infrastructure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infrastructure(), output);
  }

  // optional .cmexample2domain.databasevalues.Citizen citizen = 2;
  if (has_citizen()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->citizen(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cmexample2domain.databasevalues.Value)
}

::google::protobuf::uint8* Value::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmexample2domain.databasevalues.Value)
  // optional .cmexample2domain.databasevalues.Infrastructure infrastructure = 1;
  if (has_infrastructure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->infrastructure(), target);
  }

  // optional .cmexample2domain.databasevalues.Citizen citizen = 2;
  if (has_citizen()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->citizen(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmexample2domain.databasevalues.Value)
  return target;
}

int Value::ByteSize() const {
  int total_size = 0;

  switch (value_case()) {
    // optional .cmexample2domain.databasevalues.Infrastructure infrastructure = 1;
    case kInfrastructure: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->infrastructure());
      break;
    }
    // optional .cmexample2domain.databasevalues.Citizen citizen = 2;
    case kCitizen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->citizen());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Value* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Value*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.value_case()) {
    case kInfrastructure: {
      mutable_infrastructure()->::cmexample2domain::databasevalues::Infrastructure::MergeFrom(from.infrastructure());
      break;
    }
    case kCitizen: {
      mutable_citizen()->::cmexample2domain::databasevalues::Citizen::MergeFrom(from.citizen());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {

  return true;
}

void Value::Swap(Value* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Value_descriptor_;
  metadata.reflection = Value_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace databasevalues
}  // namespace cmexample2domain

// @@protoc_insertion_point(global_scope)
