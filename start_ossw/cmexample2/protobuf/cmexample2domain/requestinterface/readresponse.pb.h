// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample2domain/requestinterface/readresponse.proto

#ifndef PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto__INCLUDED
#define PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "protobuf/cmexample2domain/requestinterface/readtownsummaryresponse.pb.h"
#include "protobuf/cmexample2domain/requestinterface/readinfrastructureresponse.pb.h"
#include "protobuf/cmexample2domain/requestinterface/readcitizensresponse.pb.h"
// @@protoc_insertion_point(includes)

namespace cmexample2domain {
namespace requestinterface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();
void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();
void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();

class ReadResponse;

// ===================================================================

class ReadResponse : public ::google::protobuf::Message {
 public:
  ReadResponse();
  virtual ~ReadResponse();

  ReadResponse(const ReadResponse& from);

  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadResponse& default_instance();

  enum ReadResponseCase {
    kTownSummary = 1,
    kInfrastructure = 2,
    kCitizens = 3,
    READRESPONSE_NOT_SET = 0,
  };

  void Swap(ReadResponse* other);

  // implements Message ----------------------------------------------

  ReadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadResponse& from);
  void MergeFrom(const ReadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .cmexample2domain.requestinterface.ReadTownSummaryResponse townSummary = 1;
  inline bool has_townsummary() const;
  inline void clear_townsummary();
  static const int kTownSummaryFieldNumber = 1;
  inline const ::cmexample2domain::requestinterface::ReadTownSummaryResponse& townsummary() const;
  inline ::cmexample2domain::requestinterface::ReadTownSummaryResponse* mutable_townsummary();
  inline ::cmexample2domain::requestinterface::ReadTownSummaryResponse* release_townsummary();
  inline void set_allocated_townsummary(::cmexample2domain::requestinterface::ReadTownSummaryResponse* townsummary);

  // optional .cmexample2domain.requestinterface.ReadInfrastructureResponse infrastructure = 2;
  inline bool has_infrastructure() const;
  inline void clear_infrastructure();
  static const int kInfrastructureFieldNumber = 2;
  inline const ::cmexample2domain::requestinterface::ReadInfrastructureResponse& infrastructure() const;
  inline ::cmexample2domain::requestinterface::ReadInfrastructureResponse* mutable_infrastructure();
  inline ::cmexample2domain::requestinterface::ReadInfrastructureResponse* release_infrastructure();
  inline void set_allocated_infrastructure(::cmexample2domain::requestinterface::ReadInfrastructureResponse* infrastructure);

  // optional .cmexample2domain.requestinterface.ReadCitizensResponse citizens = 3;
  inline bool has_citizens() const;
  inline void clear_citizens();
  static const int kCitizensFieldNumber = 3;
  inline const ::cmexample2domain::requestinterface::ReadCitizensResponse& citizens() const;
  inline ::cmexample2domain::requestinterface::ReadCitizensResponse* mutable_citizens();
  inline ::cmexample2domain::requestinterface::ReadCitizensResponse* release_citizens();
  inline void set_allocated_citizens(::cmexample2domain::requestinterface::ReadCitizensResponse* citizens);

  inline ReadResponseCase readResponse_case() const;
  // @@protoc_insertion_point(class_scope:cmexample2domain.requestinterface.ReadResponse)
 private:
  inline void set_has_townsummary();
  inline void set_has_infrastructure();
  inline void set_has_citizens();

  inline bool has_readResponse();
  void clear_readResponse();
  inline void clear_has_readResponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union ReadResponseUnion {
    ::cmexample2domain::requestinterface::ReadTownSummaryResponse* townsummary_;
    ::cmexample2domain::requestinterface::ReadInfrastructureResponse* infrastructure_;
    ::cmexample2domain::requestinterface::ReadCitizensResponse* citizens_;
  } readResponse_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();
  friend void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();
  friend void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto();

  void InitAsDefaultInstance();
  static ReadResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ReadResponse

// optional .cmexample2domain.requestinterface.ReadTownSummaryResponse townSummary = 1;
inline bool ReadResponse::has_townsummary() const {
  return readResponse_case() == kTownSummary;
}
inline void ReadResponse::set_has_townsummary() {
  _oneof_case_[0] = kTownSummary;
}
inline void ReadResponse::clear_townsummary() {
  if (has_townsummary()) {
    delete readResponse_.townsummary_;
    clear_has_readResponse();
  }
}
inline const ::cmexample2domain::requestinterface::ReadTownSummaryResponse& ReadResponse::townsummary() const {
  return has_townsummary() ? *readResponse_.townsummary_
                      : ::cmexample2domain::requestinterface::ReadTownSummaryResponse::default_instance();
}
inline ::cmexample2domain::requestinterface::ReadTownSummaryResponse* ReadResponse::mutable_townsummary() {
  if (!has_townsummary()) {
    clear_readResponse();
    set_has_townsummary();
    readResponse_.townsummary_ = new ::cmexample2domain::requestinterface::ReadTownSummaryResponse;
  }
  return readResponse_.townsummary_;
}
inline ::cmexample2domain::requestinterface::ReadTownSummaryResponse* ReadResponse::release_townsummary() {
  if (has_townsummary()) {
    clear_has_readResponse();
    ::cmexample2domain::requestinterface::ReadTownSummaryResponse* temp = readResponse_.townsummary_;
    readResponse_.townsummary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ReadResponse::set_allocated_townsummary(::cmexample2domain::requestinterface::ReadTownSummaryResponse* townsummary) {
  clear_readResponse();
  if (townsummary) {
    set_has_townsummary();
    readResponse_.townsummary_ = townsummary;
  }
}

// optional .cmexample2domain.requestinterface.ReadInfrastructureResponse infrastructure = 2;
inline bool ReadResponse::has_infrastructure() const {
  return readResponse_case() == kInfrastructure;
}
inline void ReadResponse::set_has_infrastructure() {
  _oneof_case_[0] = kInfrastructure;
}
inline void ReadResponse::clear_infrastructure() {
  if (has_infrastructure()) {
    delete readResponse_.infrastructure_;
    clear_has_readResponse();
  }
}
inline const ::cmexample2domain::requestinterface::ReadInfrastructureResponse& ReadResponse::infrastructure() const {
  return has_infrastructure() ? *readResponse_.infrastructure_
                      : ::cmexample2domain::requestinterface::ReadInfrastructureResponse::default_instance();
}
inline ::cmexample2domain::requestinterface::ReadInfrastructureResponse* ReadResponse::mutable_infrastructure() {
  if (!has_infrastructure()) {
    clear_readResponse();
    set_has_infrastructure();
    readResponse_.infrastructure_ = new ::cmexample2domain::requestinterface::ReadInfrastructureResponse;
  }
  return readResponse_.infrastructure_;
}
inline ::cmexample2domain::requestinterface::ReadInfrastructureResponse* ReadResponse::release_infrastructure() {
  if (has_infrastructure()) {
    clear_has_readResponse();
    ::cmexample2domain::requestinterface::ReadInfrastructureResponse* temp = readResponse_.infrastructure_;
    readResponse_.infrastructure_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ReadResponse::set_allocated_infrastructure(::cmexample2domain::requestinterface::ReadInfrastructureResponse* infrastructure) {
  clear_readResponse();
  if (infrastructure) {
    set_has_infrastructure();
    readResponse_.infrastructure_ = infrastructure;
  }
}

// optional .cmexample2domain.requestinterface.ReadCitizensResponse citizens = 3;
inline bool ReadResponse::has_citizens() const {
  return readResponse_case() == kCitizens;
}
inline void ReadResponse::set_has_citizens() {
  _oneof_case_[0] = kCitizens;
}
inline void ReadResponse::clear_citizens() {
  if (has_citizens()) {
    delete readResponse_.citizens_;
    clear_has_readResponse();
  }
}
inline const ::cmexample2domain::requestinterface::ReadCitizensResponse& ReadResponse::citizens() const {
  return has_citizens() ? *readResponse_.citizens_
                      : ::cmexample2domain::requestinterface::ReadCitizensResponse::default_instance();
}
inline ::cmexample2domain::requestinterface::ReadCitizensResponse* ReadResponse::mutable_citizens() {
  if (!has_citizens()) {
    clear_readResponse();
    set_has_citizens();
    readResponse_.citizens_ = new ::cmexample2domain::requestinterface::ReadCitizensResponse;
  }
  return readResponse_.citizens_;
}
inline ::cmexample2domain::requestinterface::ReadCitizensResponse* ReadResponse::release_citizens() {
  if (has_citizens()) {
    clear_has_readResponse();
    ::cmexample2domain::requestinterface::ReadCitizensResponse* temp = readResponse_.citizens_;
    readResponse_.citizens_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ReadResponse::set_allocated_citizens(::cmexample2domain::requestinterface::ReadCitizensResponse* citizens) {
  clear_readResponse();
  if (citizens) {
    set_has_citizens();
    readResponse_.citizens_ = citizens;
  }
}

inline bool ReadResponse::has_readResponse() {
  return readResponse_case() != READRESPONSE_NOT_SET;
}
inline void ReadResponse::clear_has_readResponse() {
  _oneof_case_[0] = READRESPONSE_NOT_SET;
}
inline ReadResponse::ReadResponseCase ReadResponse::readResponse_case() const {
  return ReadResponse::ReadResponseCase(_oneof_case_[0]);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample2domain

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadresponse_2eproto__INCLUDED
