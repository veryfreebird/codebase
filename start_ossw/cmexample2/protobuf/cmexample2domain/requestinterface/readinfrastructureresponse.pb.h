// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample2domain/requestinterface/readinfrastructureresponse.proto

#ifndef PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto__INCLUDED
#define PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace cmexample2domain {
namespace requestinterface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();

class ReadInfrastructureResponse;
class BuildingInfo;

// ===================================================================

class ReadInfrastructureResponse : public ::google::protobuf::Message {
 public:
  ReadInfrastructureResponse();
  virtual ~ReadInfrastructureResponse();

  ReadInfrastructureResponse(const ReadInfrastructureResponse& from);

  inline ReadInfrastructureResponse& operator=(const ReadInfrastructureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadInfrastructureResponse& default_instance();

  void Swap(ReadInfrastructureResponse* other);

  // implements Message ----------------------------------------------

  ReadInfrastructureResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadInfrastructureResponse& from);
  void MergeFrom(const ReadInfrastructureResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .cmexample2domain.requestinterface.BuildingInfo buildingInfo = 1;
  inline int buildinginfo_size() const;
  inline void clear_buildinginfo();
  static const int kBuildingInfoFieldNumber = 1;
  inline const ::cmexample2domain::requestinterface::BuildingInfo& buildinginfo(int index) const;
  inline ::cmexample2domain::requestinterface::BuildingInfo* mutable_buildinginfo(int index);
  inline ::cmexample2domain::requestinterface::BuildingInfo* add_buildinginfo();
  inline const ::google::protobuf::RepeatedPtrField< ::cmexample2domain::requestinterface::BuildingInfo >&
      buildinginfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::cmexample2domain::requestinterface::BuildingInfo >*
      mutable_buildinginfo();

  // @@protoc_insertion_point(class_scope:cmexample2domain.requestinterface.ReadInfrastructureResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::cmexample2domain::requestinterface::BuildingInfo > buildinginfo_;
  friend void  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
  friend void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
  friend void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();

  void InitAsDefaultInstance();
  static ReadInfrastructureResponse* default_instance_;
};
// -------------------------------------------------------------------

class BuildingInfo : public ::google::protobuf::Message {
 public:
  BuildingInfo();
  virtual ~BuildingInfo();

  BuildingInfo(const BuildingInfo& from);

  inline BuildingInfo& operator=(const BuildingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildingInfo& default_instance();

  void Swap(BuildingInfo* other);

  // implements Message ----------------------------------------------

  BuildingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildingInfo& from);
  void MergeFrom(const BuildingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 opex = 2;
  inline bool has_opex() const;
  inline void clear_opex();
  static const int kOpexFieldNumber = 2;
  inline ::google::protobuf::int32 opex() const;
  inline void set_opex(::google::protobuf::int32 value);

  // optional int32 freeSpaces = 3;
  inline bool has_freespaces() const;
  inline void clear_freespaces();
  static const int kFreeSpacesFieldNumber = 3;
  inline ::google::protobuf::int32 freespaces() const;
  inline void set_freespaces(::google::protobuf::int32 value);

  // repeated string citizen = 4;
  inline int citizen_size() const;
  inline void clear_citizen();
  static const int kCitizenFieldNumber = 4;
  inline const ::std::string& citizen(int index) const;
  inline ::std::string* mutable_citizen(int index);
  inline void set_citizen(int index, const ::std::string& value);
  inline void set_citizen(int index, const char* value);
  inline void set_citizen(int index, const char* value, size_t size);
  inline ::std::string* add_citizen();
  inline void add_citizen(const ::std::string& value);
  inline void add_citizen(const char* value);
  inline void add_citizen(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& citizen() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_citizen();

  // @@protoc_insertion_point(class_scope:cmexample2domain.requestinterface.BuildingInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_opex();
  inline void clear_has_opex();
  inline void set_has_freespaces();
  inline void clear_has_freespaces();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 opex_;
  ::google::protobuf::int32 freespaces_;
  ::google::protobuf::RepeatedPtrField< ::std::string> citizen_;
  friend void  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
  friend void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();
  friend void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto();

  void InitAsDefaultInstance();
  static BuildingInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ReadInfrastructureResponse

// repeated .cmexample2domain.requestinterface.BuildingInfo buildingInfo = 1;
inline int ReadInfrastructureResponse::buildinginfo_size() const {
  return buildinginfo_.size();
}
inline void ReadInfrastructureResponse::clear_buildinginfo() {
  buildinginfo_.Clear();
}
inline const ::cmexample2domain::requestinterface::BuildingInfo& ReadInfrastructureResponse::buildinginfo(int index) const {
  // @@protoc_insertion_point(field_get:cmexample2domain.requestinterface.ReadInfrastructureResponse.buildingInfo)
  return buildinginfo_.Get(index);
}
inline ::cmexample2domain::requestinterface::BuildingInfo* ReadInfrastructureResponse::mutable_buildinginfo(int index) {
  // @@protoc_insertion_point(field_mutable:cmexample2domain.requestinterface.ReadInfrastructureResponse.buildingInfo)
  return buildinginfo_.Mutable(index);
}
inline ::cmexample2domain::requestinterface::BuildingInfo* ReadInfrastructureResponse::add_buildinginfo() {
  // @@protoc_insertion_point(field_add:cmexample2domain.requestinterface.ReadInfrastructureResponse.buildingInfo)
  return buildinginfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::cmexample2domain::requestinterface::BuildingInfo >&
ReadInfrastructureResponse::buildinginfo() const {
  // @@protoc_insertion_point(field_list:cmexample2domain.requestinterface.ReadInfrastructureResponse.buildingInfo)
  return buildinginfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::cmexample2domain::requestinterface::BuildingInfo >*
ReadInfrastructureResponse::mutable_buildinginfo() {
  // @@protoc_insertion_point(field_mutable_list:cmexample2domain.requestinterface.ReadInfrastructureResponse.buildingInfo)
  return &buildinginfo_;
}

// -------------------------------------------------------------------

// BuildingInfo

// optional string name = 1;
inline bool BuildingInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildingInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildingInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildingInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BuildingInfo::name() const {
  // @@protoc_insertion_point(field_get:cmexample2domain.requestinterface.BuildingInfo.name)
  return *name_;
}
inline void BuildingInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:cmexample2domain.requestinterface.BuildingInfo.name)
}
inline void BuildingInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:cmexample2domain.requestinterface.BuildingInfo.name)
}
inline void BuildingInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cmexample2domain.requestinterface.BuildingInfo.name)
}
inline ::std::string* BuildingInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:cmexample2domain.requestinterface.BuildingInfo.name)
  return name_;
}
inline ::std::string* BuildingInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BuildingInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:cmexample2domain.requestinterface.BuildingInfo.name)
}

// optional int32 opex = 2;
inline bool BuildingInfo::has_opex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildingInfo::set_has_opex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildingInfo::clear_has_opex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildingInfo::clear_opex() {
  opex_ = 0;
  clear_has_opex();
}
inline ::google::protobuf::int32 BuildingInfo::opex() const {
  // @@protoc_insertion_point(field_get:cmexample2domain.requestinterface.BuildingInfo.opex)
  return opex_;
}
inline void BuildingInfo::set_opex(::google::protobuf::int32 value) {
  set_has_opex();
  opex_ = value;
  // @@protoc_insertion_point(field_set:cmexample2domain.requestinterface.BuildingInfo.opex)
}

// optional int32 freeSpaces = 3;
inline bool BuildingInfo::has_freespaces() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildingInfo::set_has_freespaces() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildingInfo::clear_has_freespaces() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildingInfo::clear_freespaces() {
  freespaces_ = 0;
  clear_has_freespaces();
}
inline ::google::protobuf::int32 BuildingInfo::freespaces() const {
  // @@protoc_insertion_point(field_get:cmexample2domain.requestinterface.BuildingInfo.freeSpaces)
  return freespaces_;
}
inline void BuildingInfo::set_freespaces(::google::protobuf::int32 value) {
  set_has_freespaces();
  freespaces_ = value;
  // @@protoc_insertion_point(field_set:cmexample2domain.requestinterface.BuildingInfo.freeSpaces)
}

// repeated string citizen = 4;
inline int BuildingInfo::citizen_size() const {
  return citizen_.size();
}
inline void BuildingInfo::clear_citizen() {
  citizen_.Clear();
}
inline const ::std::string& BuildingInfo::citizen(int index) const {
  // @@protoc_insertion_point(field_get:cmexample2domain.requestinterface.BuildingInfo.citizen)
  return citizen_.Get(index);
}
inline ::std::string* BuildingInfo::mutable_citizen(int index) {
  // @@protoc_insertion_point(field_mutable:cmexample2domain.requestinterface.BuildingInfo.citizen)
  return citizen_.Mutable(index);
}
inline void BuildingInfo::set_citizen(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:cmexample2domain.requestinterface.BuildingInfo.citizen)
  citizen_.Mutable(index)->assign(value);
}
inline void BuildingInfo::set_citizen(int index, const char* value) {
  citizen_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cmexample2domain.requestinterface.BuildingInfo.citizen)
}
inline void BuildingInfo::set_citizen(int index, const char* value, size_t size) {
  citizen_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cmexample2domain.requestinterface.BuildingInfo.citizen)
}
inline ::std::string* BuildingInfo::add_citizen() {
  return citizen_.Add();
}
inline void BuildingInfo::add_citizen(const ::std::string& value) {
  citizen_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:cmexample2domain.requestinterface.BuildingInfo.citizen)
}
inline void BuildingInfo::add_citizen(const char* value) {
  citizen_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cmexample2domain.requestinterface.BuildingInfo.citizen)
}
inline void BuildingInfo::add_citizen(const char* value, size_t size) {
  citizen_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cmexample2domain.requestinterface.BuildingInfo.citizen)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BuildingInfo::citizen() const {
  // @@protoc_insertion_point(field_list:cmexample2domain.requestinterface.BuildingInfo.citizen)
  return citizen_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BuildingInfo::mutable_citizen() {
  // @@protoc_insertion_point(field_mutable_list:cmexample2domain.requestinterface.BuildingInfo.citizen)
  return &citizen_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample2domain

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_2fcmexample2domain_2frequestinterface_2freadinfrastructureresponse_2eproto__INCLUDED
