// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample2domain/requestinterface/readcitizensresponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobuf/cmexample2domain/requestinterface/readcitizensresponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cmexample2domain {
namespace requestinterface {

namespace {

const ::google::protobuf::Descriptor* ReadCitizensResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadCitizensResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CitizenInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CitizenInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto() {
  protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobuf/cmexample2domain/requestinterface/readcitizensresponse.proto");
  GOOGLE_CHECK(file != NULL);
  ReadCitizensResponse_descriptor_ = file->message_type(0);
  static const int ReadCitizensResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadCitizensResponse, citizeninfo_),
  };
  ReadCitizensResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReadCitizensResponse_descriptor_,
      ReadCitizensResponse::default_instance_,
      ReadCitizensResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadCitizensResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadCitizensResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReadCitizensResponse));
  CitizenInfo_descriptor_ = file->message_type(1);
  static const int CitizenInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CitizenInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CitizenInfo, tax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CitizenInfo, building_),
  };
  CitizenInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CitizenInfo_descriptor_,
      CitizenInfo::default_instance_,
      CitizenInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CitizenInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CitizenInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CitizenInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReadCitizensResponse_descriptor_, &ReadCitizensResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CitizenInfo_descriptor_, &CitizenInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto() {
  delete ReadCitizensResponse::default_instance_;
  delete ReadCitizensResponse_reflection_;
  delete CitizenInfo::default_instance_;
  delete CitizenInfo_reflection_;
}

void protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nEprotobuf/cmexample2domain/requestinter"
    "face/readcitizensresponse.proto\022!cmexamp"
    "le2domain.requestinterface\"[\n\024ReadCitize"
    "nsResponse\022C\n\013citizenInfo\030\001 \003(\0132..cmexam"
    "ple2domain.requestinterface.CitizenInfo\""
    ":\n\013CitizenInfo\022\014\n\004name\030\001 \001(\t\022\013\n\003tax\030\002 \001("
    "\005\022\020\n\010building\030\003 \001(\t", 259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/cmexample2domain/requestinterface/readcitizensresponse.proto", &protobuf_RegisterTypes);
  ReadCitizensResponse::default_instance_ = new ReadCitizensResponse();
  CitizenInfo::default_instance_ = new CitizenInfo();
  ReadCitizensResponse::default_instance_->InitAsDefaultInstance();
  CitizenInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto {
  StaticDescriptorInitializer_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto() {
    protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto();
  }
} static_descriptor_initializer_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReadCitizensResponse::kCitizenInfoFieldNumber;
#endif  // !_MSC_VER

ReadCitizensResponse::ReadCitizensResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cmexample2domain.requestinterface.ReadCitizensResponse)
}

void ReadCitizensResponse::InitAsDefaultInstance() {
}

ReadCitizensResponse::ReadCitizensResponse(const ReadCitizensResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cmexample2domain.requestinterface.ReadCitizensResponse)
}

void ReadCitizensResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReadCitizensResponse::~ReadCitizensResponse() {
  // @@protoc_insertion_point(destructor:cmexample2domain.requestinterface.ReadCitizensResponse)
  SharedDtor();
}

void ReadCitizensResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReadCitizensResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadCitizensResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadCitizensResponse_descriptor_;
}

const ReadCitizensResponse& ReadCitizensResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto();
  return *default_instance_;
}

ReadCitizensResponse* ReadCitizensResponse::default_instance_ = NULL;

ReadCitizensResponse* ReadCitizensResponse::New() const {
  return new ReadCitizensResponse;
}

void ReadCitizensResponse::Clear() {
  citizeninfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReadCitizensResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cmexample2domain.requestinterface.ReadCitizensResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .cmexample2domain.requestinterface.CitizenInfo citizenInfo = 1;
      case 1: {
        if (tag == 10) {
         parse_citizenInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_citizeninfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_citizenInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cmexample2domain.requestinterface.ReadCitizensResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cmexample2domain.requestinterface.ReadCitizensResponse)
  return false;
#undef DO_
}

void ReadCitizensResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cmexample2domain.requestinterface.ReadCitizensResponse)
  // repeated .cmexample2domain.requestinterface.CitizenInfo citizenInfo = 1;
  for (int i = 0; i < this->citizeninfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->citizeninfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cmexample2domain.requestinterface.ReadCitizensResponse)
}

::google::protobuf::uint8* ReadCitizensResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmexample2domain.requestinterface.ReadCitizensResponse)
  // repeated .cmexample2domain.requestinterface.CitizenInfo citizenInfo = 1;
  for (int i = 0; i < this->citizeninfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->citizeninfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmexample2domain.requestinterface.ReadCitizensResponse)
  return target;
}

int ReadCitizensResponse::ByteSize() const {
  int total_size = 0;

  // repeated .cmexample2domain.requestinterface.CitizenInfo citizenInfo = 1;
  total_size += 1 * this->citizeninfo_size();
  for (int i = 0; i < this->citizeninfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->citizeninfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadCitizensResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReadCitizensResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReadCitizensResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReadCitizensResponse::MergeFrom(const ReadCitizensResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  citizeninfo_.MergeFrom(from.citizeninfo_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReadCitizensResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadCitizensResponse::CopyFrom(const ReadCitizensResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadCitizensResponse::IsInitialized() const {

  return true;
}

void ReadCitizensResponse::Swap(ReadCitizensResponse* other) {
  if (other != this) {
    citizeninfo_.Swap(&other->citizeninfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReadCitizensResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadCitizensResponse_descriptor_;
  metadata.reflection = ReadCitizensResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CitizenInfo::kNameFieldNumber;
const int CitizenInfo::kTaxFieldNumber;
const int CitizenInfo::kBuildingFieldNumber;
#endif  // !_MSC_VER

CitizenInfo::CitizenInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cmexample2domain.requestinterface.CitizenInfo)
}

void CitizenInfo::InitAsDefaultInstance() {
}

CitizenInfo::CitizenInfo(const CitizenInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cmexample2domain.requestinterface.CitizenInfo)
}

void CitizenInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tax_ = 0;
  building_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CitizenInfo::~CitizenInfo() {
  // @@protoc_insertion_point(destructor:cmexample2domain.requestinterface.CitizenInfo)
  SharedDtor();
}

void CitizenInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (building_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete building_;
  }
  if (this != default_instance_) {
  }
}

void CitizenInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CitizenInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CitizenInfo_descriptor_;
}

const CitizenInfo& CitizenInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobuf_2fcmexample2domain_2frequestinterface_2freadcitizensresponse_2eproto();
  return *default_instance_;
}

CitizenInfo* CitizenInfo::default_instance_ = NULL;

CitizenInfo* CitizenInfo::New() const {
  return new CitizenInfo;
}

void CitizenInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    tax_ = 0;
    if (has_building()) {
      if (building_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        building_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CitizenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cmexample2domain.requestinterface.CitizenInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_tax;
        break;
      }

      // optional int32 tax = 2;
      case 2: {
        if (tag == 16) {
         parse_tax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tax_)));
          set_has_tax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_building;
        break;
      }

      // optional string building = 3;
      case 3: {
        if (tag == 26) {
         parse_building:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->building().data(), this->building().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "building");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cmexample2domain.requestinterface.CitizenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cmexample2domain.requestinterface.CitizenInfo)
  return false;
#undef DO_
}

void CitizenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cmexample2domain.requestinterface.CitizenInfo)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 tax = 2;
  if (has_tax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tax(), output);
  }

  // optional string building = 3;
  if (has_building()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->building().data(), this->building().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "building");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->building(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cmexample2domain.requestinterface.CitizenInfo)
}

::google::protobuf::uint8* CitizenInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmexample2domain.requestinterface.CitizenInfo)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 tax = 2;
  if (has_tax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tax(), target);
  }

  // optional string building = 3;
  if (has_building()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->building().data(), this->building().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "building");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->building(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmexample2domain.requestinterface.CitizenInfo)
  return target;
}

int CitizenInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 tax = 2;
    if (has_tax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tax());
    }

    // optional string building = 3;
    if (has_building()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->building());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CitizenInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CitizenInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CitizenInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CitizenInfo::MergeFrom(const CitizenInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_tax()) {
      set_tax(from.tax());
    }
    if (from.has_building()) {
      set_building(from.building());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CitizenInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CitizenInfo::CopyFrom(const CitizenInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CitizenInfo::IsInitialized() const {

  return true;
}

void CitizenInfo::Swap(CitizenInfo* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(tax_, other->tax_);
    std::swap(building_, other->building_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CitizenInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CitizenInfo_descriptor_;
  metadata.reflection = CitizenInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample2domain

// @@protoc_insertion_point(global_scope)
