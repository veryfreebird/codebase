// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample1domain/requestinterface/readfooresponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobuf/cmexample1domain/requestinterface/readfooresponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cmexample1domain {
namespace requestinterface {

namespace {

const ::google::protobuf::Descriptor* ReadFooResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadFooResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto() {
  protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobuf/cmexample1domain/requestinterface/readfooresponse.proto");
  GOOGLE_CHECK(file != NULL);
  ReadFooResponse_descriptor_ = file->message_type(0);
  static const int ReadFooResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadFooResponse, foo_),
  };
  ReadFooResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReadFooResponse_descriptor_,
      ReadFooResponse::default_instance_,
      ReadFooResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadFooResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadFooResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReadFooResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReadFooResponse_descriptor_, &ReadFooResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto() {
  delete ReadFooResponse::default_instance_;
  delete ReadFooResponse_reflection_;
}

void protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cmexample1domain::requestinterface::protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2ffoo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n@protobuf/cmexample1domain/requestinter"
    "face/readfooresponse.proto\022!cmexample1do"
    "main.requestinterface\0324protobuf/cmexampl"
    "e1domain/requestinterface/foo.proto\"F\n\017R"
    "eadFooResponse\0223\n\003foo\030\001 \001(\0132&.cmexample1"
    "domain.requestinterface.Foo", 227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/cmexample1domain/requestinterface/readfooresponse.proto", &protobuf_RegisterTypes);
  ReadFooResponse::default_instance_ = new ReadFooResponse();
  ReadFooResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto {
  StaticDescriptorInitializer_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto() {
    protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto();
  }
} static_descriptor_initializer_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ReadFooResponse::kFooFieldNumber;
#endif  // !_MSC_VER

ReadFooResponse::ReadFooResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cmexample1domain.requestinterface.ReadFooResponse)
}

void ReadFooResponse::InitAsDefaultInstance() {
  foo_ = const_cast< ::cmexample1domain::requestinterface::Foo*>(&::cmexample1domain::requestinterface::Foo::default_instance());
}

ReadFooResponse::ReadFooResponse(const ReadFooResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cmexample1domain.requestinterface.ReadFooResponse)
}

void ReadFooResponse::SharedCtor() {
  _cached_size_ = 0;
  foo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReadFooResponse::~ReadFooResponse() {
  // @@protoc_insertion_point(destructor:cmexample1domain.requestinterface.ReadFooResponse)
  SharedDtor();
}

void ReadFooResponse::SharedDtor() {
  if (this != default_instance_) {
    delete foo_;
  }
}

void ReadFooResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadFooResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadFooResponse_descriptor_;
}

const ReadFooResponse& ReadFooResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadfooresponse_2eproto();
  return *default_instance_;
}

ReadFooResponse* ReadFooResponse::default_instance_ = NULL;

ReadFooResponse* ReadFooResponse::New() const {
  return new ReadFooResponse;
}

void ReadFooResponse::Clear() {
  if (has_foo()) {
    if (foo_ != NULL) foo_->::cmexample1domain::requestinterface::Foo::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReadFooResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cmexample1domain.requestinterface.ReadFooResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cmexample1domain.requestinterface.Foo foo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_foo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cmexample1domain.requestinterface.ReadFooResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cmexample1domain.requestinterface.ReadFooResponse)
  return false;
#undef DO_
}

void ReadFooResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cmexample1domain.requestinterface.ReadFooResponse)
  // optional .cmexample1domain.requestinterface.Foo foo = 1;
  if (has_foo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->foo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cmexample1domain.requestinterface.ReadFooResponse)
}

::google::protobuf::uint8* ReadFooResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmexample1domain.requestinterface.ReadFooResponse)
  // optional .cmexample1domain.requestinterface.Foo foo = 1;
  if (has_foo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->foo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmexample1domain.requestinterface.ReadFooResponse)
  return target;
}

int ReadFooResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .cmexample1domain.requestinterface.Foo foo = 1;
    if (has_foo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadFooResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReadFooResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReadFooResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReadFooResponse::MergeFrom(const ReadFooResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_foo()) {
      mutable_foo()->::cmexample1domain::requestinterface::Foo::MergeFrom(from.foo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReadFooResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadFooResponse::CopyFrom(const ReadFooResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadFooResponse::IsInitialized() const {

  return true;
}

void ReadFooResponse::Swap(ReadFooResponse* other) {
  if (other != this) {
    std::swap(foo_, other->foo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReadFooResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadFooResponse_descriptor_;
  metadata.reflection = ReadFooResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample1domain

// @@protoc_insertion_point(global_scope)
