// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample1domain/requestinterface/readwriterequest.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protobuf/cmexample1domain/requestinterface/readwriterequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cmexample1domain {
namespace requestinterface {

namespace {

const ::google::protobuf::Descriptor* ReadWriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadWriteRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ReadWriteRequest_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto() {
  protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protobuf/cmexample1domain/requestinterface/readwriterequest.proto");
  GOOGLE_CHECK(file != NULL);
  ReadWriteRequest_descriptor_ = file->message_type(0);
  static const int ReadWriteRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadWriteRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadWriteRequest, writefoorequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadWriteRequest, deletefoorequest_),
  };
  ReadWriteRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReadWriteRequest_descriptor_,
      ReadWriteRequest::default_instance_,
      ReadWriteRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadWriteRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadWriteRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReadWriteRequest));
  ReadWriteRequest_Type_descriptor_ = ReadWriteRequest_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReadWriteRequest_descriptor_, &ReadWriteRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto() {
  delete ReadWriteRequest::default_instance_;
  delete ReadWriteRequest_reflection_;
}

void protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::cmexample1domain::requestinterface::protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2fwritefoorequest_2eproto();
  ::cmexample1domain::requestinterface::protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2fdeletefoorequest_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nAprotobuf/cmexample1domain/requestinter"
    "face/readwriterequest.proto\022!cmexample1d"
    "omain.requestinterface\032@protobuf/cmexamp"
    "le1domain/requestinterface/writefooreque"
    "st.proto\032Aprotobuf/cmexample1domain/requ"
    "estinterface/deletefoorequest.proto\"\252\002\n\020"
    "ReadWriteRequest\022F\n\004type\030\001 \001(\01628.cmexamp"
    "le1domain.requestinterface.ReadWriteRequ"
    "est.Type\022K\n\017writeFooRequest\030\002 \001(\01322.cmex"
    "ample1domain.requestinterface.WriteFooRe"
    "quest\022M\n\020deleteFooRequest\030\003 \001(\01323.cmexam"
    "ple1domain.requestinterface.DeleteFooReq"
    "uest\"2\n\004Type\022\013\n\007UNKNOWN\020\000\022\r\n\tWRITE_FOO\020\001"
    "\022\016\n\nDELETE_FOO\020\002", 536);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/cmexample1domain/requestinterface/readwriterequest.proto", &protobuf_RegisterTypes);
  ReadWriteRequest::default_instance_ = new ReadWriteRequest();
  ReadWriteRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto {
  StaticDescriptorInitializer_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto() {
    protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
  }
} static_descriptor_initializer_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* ReadWriteRequest_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadWriteRequest_Type_descriptor_;
}
bool ReadWriteRequest_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ReadWriteRequest_Type ReadWriteRequest::UNKNOWN;
const ReadWriteRequest_Type ReadWriteRequest::WRITE_FOO;
const ReadWriteRequest_Type ReadWriteRequest::DELETE_FOO;
const ReadWriteRequest_Type ReadWriteRequest::Type_MIN;
const ReadWriteRequest_Type ReadWriteRequest::Type_MAX;
const int ReadWriteRequest::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ReadWriteRequest::kTypeFieldNumber;
const int ReadWriteRequest::kWriteFooRequestFieldNumber;
const int ReadWriteRequest::kDeleteFooRequestFieldNumber;
#endif  // !_MSC_VER

ReadWriteRequest::ReadWriteRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cmexample1domain.requestinterface.ReadWriteRequest)
}

void ReadWriteRequest::InitAsDefaultInstance() {
  writefoorequest_ = const_cast< ::cmexample1domain::requestinterface::WriteFooRequest*>(&::cmexample1domain::requestinterface::WriteFooRequest::default_instance());
  deletefoorequest_ = const_cast< ::cmexample1domain::requestinterface::DeleteFooRequest*>(&::cmexample1domain::requestinterface::DeleteFooRequest::default_instance());
}

ReadWriteRequest::ReadWriteRequest(const ReadWriteRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:cmexample1domain.requestinterface.ReadWriteRequest)
}

void ReadWriteRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  writefoorequest_ = NULL;
  deletefoorequest_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReadWriteRequest::~ReadWriteRequest() {
  // @@protoc_insertion_point(destructor:cmexample1domain.requestinterface.ReadWriteRequest)
  SharedDtor();
}

void ReadWriteRequest::SharedDtor() {
  if (this != default_instance_) {
    delete writefoorequest_;
    delete deletefoorequest_;
  }
}

void ReadWriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadWriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadWriteRequest_descriptor_;
}

const ReadWriteRequest& ReadWriteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
  return *default_instance_;
}

ReadWriteRequest* ReadWriteRequest::default_instance_ = NULL;

ReadWriteRequest* ReadWriteRequest::New() const {
  return new ReadWriteRequest;
}

void ReadWriteRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    type_ = 0;
    if (has_writefoorequest()) {
      if (writefoorequest_ != NULL) writefoorequest_->::cmexample1domain::requestinterface::WriteFooRequest::Clear();
    }
    if (has_deletefoorequest()) {
      if (deletefoorequest_ != NULL) deletefoorequest_->::cmexample1domain::requestinterface::DeleteFooRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReadWriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cmexample1domain.requestinterface.ReadWriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::cmexample1domain::requestinterface::ReadWriteRequest_Type_IsValid(value)) {
            set_type(static_cast< ::cmexample1domain::requestinterface::ReadWriteRequest_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_writeFooRequest;
        break;
      }

      // optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
      case 2: {
        if (tag == 18) {
         parse_writeFooRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_writefoorequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_deleteFooRequest;
        break;
      }

      // optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
      case 3: {
        if (tag == 26) {
         parse_deleteFooRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deletefoorequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cmexample1domain.requestinterface.ReadWriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cmexample1domain.requestinterface.ReadWriteRequest)
  return false;
#undef DO_
}

void ReadWriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cmexample1domain.requestinterface.ReadWriteRequest)
  // optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
  if (has_writefoorequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->writefoorequest(), output);
  }

  // optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
  if (has_deletefoorequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->deletefoorequest(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cmexample1domain.requestinterface.ReadWriteRequest)
}

::google::protobuf::uint8* ReadWriteRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmexample1domain.requestinterface.ReadWriteRequest)
  // optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
  if (has_writefoorequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->writefoorequest(), target);
  }

  // optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
  if (has_deletefoorequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->deletefoorequest(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmexample1domain.requestinterface.ReadWriteRequest)
  return target;
}

int ReadWriteRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
    if (has_writefoorequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->writefoorequest());
    }

    // optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
    if (has_deletefoorequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->deletefoorequest());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadWriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReadWriteRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReadWriteRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReadWriteRequest::MergeFrom(const ReadWriteRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_writefoorequest()) {
      mutable_writefoorequest()->::cmexample1domain::requestinterface::WriteFooRequest::MergeFrom(from.writefoorequest());
    }
    if (from.has_deletefoorequest()) {
      mutable_deletefoorequest()->::cmexample1domain::requestinterface::DeleteFooRequest::MergeFrom(from.deletefoorequest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReadWriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadWriteRequest::CopyFrom(const ReadWriteRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadWriteRequest::IsInitialized() const {

  return true;
}

void ReadWriteRequest::Swap(ReadWriteRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(writefoorequest_, other->writefoorequest_);
    std::swap(deletefoorequest_, other->deletefoorequest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReadWriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadWriteRequest_descriptor_;
  metadata.reflection = ReadWriteRequest_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample1domain

// @@protoc_insertion_point(global_scope)
