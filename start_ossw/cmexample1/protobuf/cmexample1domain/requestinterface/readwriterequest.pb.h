// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/cmexample1domain/requestinterface/readwriterequest.proto

#ifndef PROTOBUF_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto__INCLUDED
#define PROTOBUF_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "protobuf/cmexample1domain/requestinterface/writefoorequest.pb.h"
#include "protobuf/cmexample1domain/requestinterface/deletefoorequest.pb.h"
// @@protoc_insertion_point(includes)

namespace cmexample1domain {
namespace requestinterface {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
void protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
void protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();

class ReadWriteRequest;

enum ReadWriteRequest_Type {
  ReadWriteRequest_Type_UNKNOWN = 0,
  ReadWriteRequest_Type_WRITE_FOO = 1,
  ReadWriteRequest_Type_DELETE_FOO = 2
};
bool ReadWriteRequest_Type_IsValid(int value);
const ReadWriteRequest_Type ReadWriteRequest_Type_Type_MIN = ReadWriteRequest_Type_UNKNOWN;
const ReadWriteRequest_Type ReadWriteRequest_Type_Type_MAX = ReadWriteRequest_Type_DELETE_FOO;
const int ReadWriteRequest_Type_Type_ARRAYSIZE = ReadWriteRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReadWriteRequest_Type_descriptor();
inline const ::std::string& ReadWriteRequest_Type_Name(ReadWriteRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReadWriteRequest_Type_descriptor(), value);
}
inline bool ReadWriteRequest_Type_Parse(
    const ::std::string& name, ReadWriteRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReadWriteRequest_Type>(
    ReadWriteRequest_Type_descriptor(), name, value);
}
// ===================================================================

class ReadWriteRequest : public ::google::protobuf::Message {
 public:
  ReadWriteRequest();
  virtual ~ReadWriteRequest();

  ReadWriteRequest(const ReadWriteRequest& from);

  inline ReadWriteRequest& operator=(const ReadWriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadWriteRequest& default_instance();

  void Swap(ReadWriteRequest* other);

  // implements Message ----------------------------------------------

  ReadWriteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadWriteRequest& from);
  void MergeFrom(const ReadWriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReadWriteRequest_Type Type;
  static const Type UNKNOWN = ReadWriteRequest_Type_UNKNOWN;
  static const Type WRITE_FOO = ReadWriteRequest_Type_WRITE_FOO;
  static const Type DELETE_FOO = ReadWriteRequest_Type_DELETE_FOO;
  static inline bool Type_IsValid(int value) {
    return ReadWriteRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ReadWriteRequest_Type_Type_MIN;
  static const Type Type_MAX =
    ReadWriteRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ReadWriteRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ReadWriteRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ReadWriteRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ReadWriteRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::cmexample1domain::requestinterface::ReadWriteRequest_Type type() const;
  inline void set_type(::cmexample1domain::requestinterface::ReadWriteRequest_Type value);

  // optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
  inline bool has_writefoorequest() const;
  inline void clear_writefoorequest();
  static const int kWriteFooRequestFieldNumber = 2;
  inline const ::cmexample1domain::requestinterface::WriteFooRequest& writefoorequest() const;
  inline ::cmexample1domain::requestinterface::WriteFooRequest* mutable_writefoorequest();
  inline ::cmexample1domain::requestinterface::WriteFooRequest* release_writefoorequest();
  inline void set_allocated_writefoorequest(::cmexample1domain::requestinterface::WriteFooRequest* writefoorequest);

  // optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
  inline bool has_deletefoorequest() const;
  inline void clear_deletefoorequest();
  static const int kDeleteFooRequestFieldNumber = 3;
  inline const ::cmexample1domain::requestinterface::DeleteFooRequest& deletefoorequest() const;
  inline ::cmexample1domain::requestinterface::DeleteFooRequest* mutable_deletefoorequest();
  inline ::cmexample1domain::requestinterface::DeleteFooRequest* release_deletefoorequest();
  inline void set_allocated_deletefoorequest(::cmexample1domain::requestinterface::DeleteFooRequest* deletefoorequest);

  // @@protoc_insertion_point(class_scope:cmexample1domain.requestinterface.ReadWriteRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_writefoorequest();
  inline void clear_has_writefoorequest();
  inline void set_has_deletefoorequest();
  inline void clear_has_deletefoorequest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::cmexample1domain::requestinterface::WriteFooRequest* writefoorequest_;
  ::cmexample1domain::requestinterface::DeleteFooRequest* deletefoorequest_;
  int type_;
  friend void  protobuf_AddDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
  friend void protobuf_AssignDesc_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();
  friend void protobuf_ShutdownFile_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto();

  void InitAsDefaultInstance();
  static ReadWriteRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// ReadWriteRequest

// optional .cmexample1domain.requestinterface.ReadWriteRequest.Type type = 1;
inline bool ReadWriteRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadWriteRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadWriteRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadWriteRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::cmexample1domain::requestinterface::ReadWriteRequest_Type ReadWriteRequest::type() const {
  // @@protoc_insertion_point(field_get:cmexample1domain.requestinterface.ReadWriteRequest.type)
  return static_cast< ::cmexample1domain::requestinterface::ReadWriteRequest_Type >(type_);
}
inline void ReadWriteRequest::set_type(::cmexample1domain::requestinterface::ReadWriteRequest_Type value) {
  assert(::cmexample1domain::requestinterface::ReadWriteRequest_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:cmexample1domain.requestinterface.ReadWriteRequest.type)
}

// optional .cmexample1domain.requestinterface.WriteFooRequest writeFooRequest = 2;
inline bool ReadWriteRequest::has_writefoorequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadWriteRequest::set_has_writefoorequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadWriteRequest::clear_has_writefoorequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadWriteRequest::clear_writefoorequest() {
  if (writefoorequest_ != NULL) writefoorequest_->::cmexample1domain::requestinterface::WriteFooRequest::Clear();
  clear_has_writefoorequest();
}
inline const ::cmexample1domain::requestinterface::WriteFooRequest& ReadWriteRequest::writefoorequest() const {
  // @@protoc_insertion_point(field_get:cmexample1domain.requestinterface.ReadWriteRequest.writeFooRequest)
  return writefoorequest_ != NULL ? *writefoorequest_ : *default_instance_->writefoorequest_;
}
inline ::cmexample1domain::requestinterface::WriteFooRequest* ReadWriteRequest::mutable_writefoorequest() {
  set_has_writefoorequest();
  if (writefoorequest_ == NULL) writefoorequest_ = new ::cmexample1domain::requestinterface::WriteFooRequest;
  // @@protoc_insertion_point(field_mutable:cmexample1domain.requestinterface.ReadWriteRequest.writeFooRequest)
  return writefoorequest_;
}
inline ::cmexample1domain::requestinterface::WriteFooRequest* ReadWriteRequest::release_writefoorequest() {
  clear_has_writefoorequest();
  ::cmexample1domain::requestinterface::WriteFooRequest* temp = writefoorequest_;
  writefoorequest_ = NULL;
  return temp;
}
inline void ReadWriteRequest::set_allocated_writefoorequest(::cmexample1domain::requestinterface::WriteFooRequest* writefoorequest) {
  delete writefoorequest_;
  writefoorequest_ = writefoorequest;
  if (writefoorequest) {
    set_has_writefoorequest();
  } else {
    clear_has_writefoorequest();
  }
  // @@protoc_insertion_point(field_set_allocated:cmexample1domain.requestinterface.ReadWriteRequest.writeFooRequest)
}

// optional .cmexample1domain.requestinterface.DeleteFooRequest deleteFooRequest = 3;
inline bool ReadWriteRequest::has_deletefoorequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadWriteRequest::set_has_deletefoorequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadWriteRequest::clear_has_deletefoorequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadWriteRequest::clear_deletefoorequest() {
  if (deletefoorequest_ != NULL) deletefoorequest_->::cmexample1domain::requestinterface::DeleteFooRequest::Clear();
  clear_has_deletefoorequest();
}
inline const ::cmexample1domain::requestinterface::DeleteFooRequest& ReadWriteRequest::deletefoorequest() const {
  // @@protoc_insertion_point(field_get:cmexample1domain.requestinterface.ReadWriteRequest.deleteFooRequest)
  return deletefoorequest_ != NULL ? *deletefoorequest_ : *default_instance_->deletefoorequest_;
}
inline ::cmexample1domain::requestinterface::DeleteFooRequest* ReadWriteRequest::mutable_deletefoorequest() {
  set_has_deletefoorequest();
  if (deletefoorequest_ == NULL) deletefoorequest_ = new ::cmexample1domain::requestinterface::DeleteFooRequest;
  // @@protoc_insertion_point(field_mutable:cmexample1domain.requestinterface.ReadWriteRequest.deleteFooRequest)
  return deletefoorequest_;
}
inline ::cmexample1domain::requestinterface::DeleteFooRequest* ReadWriteRequest::release_deletefoorequest() {
  clear_has_deletefoorequest();
  ::cmexample1domain::requestinterface::DeleteFooRequest* temp = deletefoorequest_;
  deletefoorequest_ = NULL;
  return temp;
}
inline void ReadWriteRequest::set_allocated_deletefoorequest(::cmexample1domain::requestinterface::DeleteFooRequest* deletefoorequest) {
  delete deletefoorequest_;
  deletefoorequest_ = deletefoorequest;
  if (deletefoorequest) {
    set_has_deletefoorequest();
  } else {
    clear_has_deletefoorequest();
  }
  // @@protoc_insertion_point(field_set_allocated:cmexample1domain.requestinterface.ReadWriteRequest.deleteFooRequest)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace requestinterface
}  // namespace cmexample1domain

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cmexample1domain::requestinterface::ReadWriteRequest_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cmexample1domain::requestinterface::ReadWriteRequest_Type>() {
  return ::cmexample1domain::requestinterface::ReadWriteRequest_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_2fcmexample1domain_2frequestinterface_2freadwriterequest_2eproto__INCLUDED
