#!/usr/bin/bash -

trap "echo 'CTRL + C is hit, linenum: $LINENO, command: $BASH_COMMAND'; exit;" SIGINT
trap "echo 'Normal exit'" 0


grep "^jamema" /etc/passwd && echo "jamema found in password" || echo "jamema not found in password"

var=testfile

if [ -n "$var" ] && [ -e $var ]    ####  if [[ -n $var && -e $var ]]   ==same as this
then
    echo "\$var is not null and a file named $var exists."
else
    echo "\$var is null or file named $var does not exist"
fi

num=123
if [[ "$num" -gt 100 && "$num" -lt 150 ]]
then
    echo "\$num is $num greater than 100 and less than 150"
fi

test ! -f /etc/passwd && echo "File /etc/passwd does not exist" || echo "File /etc/passwd does exist"
[ ! -f /etc/passwd ] || echo "File /etc/passwd exists"

datevar=`date`
pwdvar=`pwd`

echo "$datevar"
echo "$pwdvar"

if [ $# -eq 0 ]
then
    echo "no input parameter \$1"
else
    echo "\$1 is"
    case "$1" in
        1)
            echo -e "1\n"
            ;;
        2)
            echo -e "2\n"
            ;;
        *)
            echo -e "$1\n"
            ;;
    esac
fi

echo "list files\n"
for file in `ls`
do
    echo "$file "
done

vars=1
while [ $vars -le 3 ]  ##while true OR  while : OR while false - infinite while loop
do
    echo "while $vars"
    vars=$((vars+1))
done

a=28
b=25
c=$(($((a>b))?a:b))
echo $c

read -sp "Enter a password:" pass

if test "$pass" == "jamema"
then
    echo -e "\nPassword jamema verified."
elif test "$pass" == "rose"
then
    echo -e "\nPassword rose verified."
else
    echo -e "\nAccess denied."
fi

while getopts ":abc:d:" opt
do
    case $opt in
        a)
            echo "-a was triggered"
            ;;
        b)
            echo "-b was triggered"
            ;;
        c)
            echo "-c with var $OPTARG"
            ;;
        d)
            echo "-d with var $OPTARG"
            ;;
        :)
            echo "option -$OPTARG requires an argument" ##$OPTARG is set to option
            ;;
        ?)
            echo "Invalid option -$OPTARG"              ##$OPTARG is set to invalid option
            ;;
    esac
done

select choice in a b c d Exit
do
    case $choice in
        a) echo "a";;
        b) echo "b";;
        c) echo "c";;
        d) echo "d";;
        Exit) 
            echo "Exit"
            break;
    esac
done

SRC_PORT=${1:-""}
echo ${SRC_PORT}  ##if no $1 defined, $1 is set to ""


exit 0
